<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<dwr:configuration />
	
	<dwr:annotation-scan base-package="dev.fringe" scanDataTransferObject="true" scanRemoteProxy="true" />
	<!-- DWR will scan the classpath and search classes containing @RemoteProxy or 
		@RemoteMethod annotations. This will register the beans and Creator proxies for these classes.-->

	<!-- DWR will map util.js and engine.js files to the dwrController.
		You can then include this files as external Javascript references from your JSP -->
	<dwr:url-mapping />

	<!-- Defines the dwrController. During production, set the debug property to false -->
	<dwr:controller id="dwrController" debug="true" />

	<!-- This is required if you want to configure any beans not managed by
		Spring. Leaving it enabled doesn't do any negative effects. Here's a
		sample config: 
		<dwr:configuration> 
			<dwr:convert type="bean" class="org.dhafirmoussa.dwrshowcase.CustomClass" /> 
		</dwr:configuration> -->
	<dwr:configuration />	
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/page/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/lib/" mapping="/lib/**" />
	
</beans>